ROBUSTEZZA PASSWORD
Troppo spesso si scelgono password facili da indovinare
Contromisure: misura PROATTIVA-> impedire password facili ma conseguenze post-it attaccati
              misura REATTIVA -> scoprire tramite penetration test e mostrarne la debolezza 

In linux le credenziali sono in /etc/passwd , una riga per ogni utente
campi separati da due punti, vi è l hash della passwd
Quando si sceglie una password viene passata attraverso una funzione chiamata hash, non invertibile(dall'hash non posso ritornare alla password)
Il sistema una volta inserita la password per accedere verifica la correttezza dell'hash
Piccola parentesi:
La funzione hash mappa infiniti possibili input (password) in un numero limitato di output, perchè l hash è una stringa di dimensioni finite,es 256 bit
Esistono quindi infinite password che producono lo stesso hash, è quindi importante l'età della password, cambiarla spesso implica meno tempo all'attaccante per trovarla 

Il file /etc/shadow contiene i dati sulla validità temporale della password esaminabili e modificabili con chage
significato e nomi in /etc/login.defs 
PASS_MAX_DAYS   numero massimo di giorni per cui è valida
PASS_MIN_DAYS   numero minimo, per evitare cambi temporanei
PASS_WARN_AGE   numero di giorni in cui inizia il promemoria di cambio 

/etc/default/useradd
INACTIVE    numero di giorni dopo la scadenza della password dopo il quale l'account viene disabilitato
EXPIRE      data di scadenza account

Le librerie di gestione delle credenziali permettono di controllare la robustezza delle password
/etc/pam.d/system-auth o /etc/pam.d/common-passwd la riga inizia con password requisite può accettare diversi parametri
minlen
ucredit
dcredit
ecc

Limiti di riutilizzo  e blocco dopo errori di autenticazione

I limits per l'uso di risorse possono essere:
HARD impostati da root non possono essere superati 
SOFT modificabili dall'utente entro il amssimo permesso dal SOFT
I limits possono essere configurati 
LOCALMENTE ad ogni shell comando ulimit
CENTRALMENTE con il modulo pam_limit
/etc/limits.configurati
<domain> <types> <item> <values>
user/group hard/soft oggetto valore

Esercitazione 1
Gestione eventi
-Gli utenti/gruppi creati a riga di comando con  adduser addgroup
-Ogni utente deve appartenere ad almeno un gruppo, il sistema ne genera uno omonimo
-Il comando passwd si usa per cambiare la password
-Il comando chown per cambiare proprietario [new_owner]:[new_group]
-Il comando whoami riporta lo username
-Il comando who chi è collegato alla macchina
-Il comando last storico dei collegamenti
-Il comando id [username] info su identità utente

Permessi 666 per i file, l'esecuzione è un'eccezione
Permessi 777 per le directory,navigare è necessario
La umask toglie i permessi da non concedere, poiché  in Linux il gruppo di default contiene soo l'utente 
una umask sensata è 006 per i file (toglie a other lettura e scrittura)
Il comando umask permette di scoprire la umask e settarla, per renderlo persistente occorre inserirlo come ultimo
comando in un file di configurazione